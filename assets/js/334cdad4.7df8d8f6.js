"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[395],{1024:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"development/developer-guidelines","title":"Developer Guidelines","description":"Changes to the UpsetConfig type require writing config conversion functions to ensure backwards compatibility. See the note at the top of packages/core/src/convertConfig.ts for details. Additionally, the typechecker for the UpsetConfig must be updated when the type is. See packages/core/src/typecheck.ts. Additionally, all the types used within UpsetConfig have their own typecheck functions; changes to these types must be reflected in the typechecker.","source":"@site/docs/development/developer-guidelines.md","sourceDirName":"development","slug":"/development/developer-guidelines","permalink":"/upset2/docs/development/developer-guidelines","draft":false,"unlisted":false,"editUrl":"https://github.com/visdesignlab/upset2/edit/main/packages/userdocs/docs/development/developer-guidelines.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Local Installation","permalink":"/upset2/docs/development/local-development"}}');var s=n(4848),i=n(8453);const c={sidebar_position:3},r="Developer Guidelines",d={},l=[];function p(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"developer-guidelines",children:"Developer Guidelines"})}),"\n",(0,s.jsxs)(t.p,{children:["Changes to the ",(0,s.jsx)(t.code,{children:"UpsetConfig"})," type require writing config conversion functions to ensure backwards compatibility. See the note at the top of ",(0,s.jsx)(t.code,{children:"packages/core/src/convertConfig.ts"})," for details. Additionally, the typechecker for the ",(0,s.jsx)(t.code,{children:"UpsetConfig"})," must be updated when the type is. See ",(0,s.jsx)(t.code,{children:"packages/core/src/typecheck.ts"}),". Additionally, all the types used within ",(0,s.jsx)(t.code,{children:"UpsetConfig"})," have their own typecheck functions; changes to these types must be reflected in the typechecker."]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>r});var o=n(6540);const s={},i=o.createContext(s);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);