"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[1938],{3926:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"typedoc/@visdesignlab/upset2-core/functions/convertConfig","title":"convertConfig","description":"Developer Reference / @visdesignlab/upset2-core / convertConfig","source":"@site/docs/typedoc/@visdesignlab/upset2-core/functions/convertConfig.md","sourceDirName":"typedoc/@visdesignlab/upset2-core/functions","slug":"/typedoc/@visdesignlab/upset2-core/functions/convertConfig","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/convertConfig","draft":false,"unlisted":false,"editUrl":"https://github.com/visdesignlab/upset2/edit/main/packages/userdocs/docs/typedoc/@visdesignlab/upset2-core/functions/convertConfig.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"attQueryToString","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/attQueryToString"},"next":{"title":"deepCopy","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/deepCopy"}}');var o=t(4848),i=t(8453);const c={},r="Function: convertConfig()",d={},a=[{value:"Parameters",id:"parameters",level:2},{value:"config",id:"config",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/upset2/docs/typedoc/",children:"Developer Reference"})," / ",(0,o.jsx)(n.a,{href:"/upset2/docs/typedoc/@visdesignlab/upset2-core/",children:"@visdesignlab/upset2-core"})," / convertConfig"]}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"function-convertconfig",children:"Function: convertConfig()"})}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"convertConfig"}),"(",(0,o.jsx)(n.code,{children:"config"}),"): ",(0,o.jsx)(n.a,{href:"/upset2/docs/typedoc/@visdesignlab/upset2-core/type-aliases/UpsetConfig",children:(0,o.jsx)(n.code,{children:"UpsetConfig"})})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Defined in: ",(0,o.jsx)(n.a,{href:"https://github.com/visdesignlab/upset2/blob/3f07b0f844c8da5982433b69e57eaded6674ebde/packages/core/src/convertConfig.ts#L270",children:"convertConfig.ts:270"})]}),"\n",(0,o.jsx)(n.p,{children:"Converts a config, of any version, to the current version.\nThis is done in-place, so the input config will be modified and returned.\nOutputs a console error if the after-conversion config is invalid;\nthis should not happen in practice but if it does, there will likely be other errors downstream."}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsx)(n.h3,{id:"config",children:"config"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.code,{children:"unknown"})}),"\n",(0,o.jsx)(n.p,{children:"The config to convert."}),"\n",(0,o.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"/upset2/docs/typedoc/@visdesignlab/upset2-core/type-aliases/UpsetConfig",children:(0,o.jsx)(n.code,{children:"UpsetConfig"})})}),"\n",(0,o.jsx)(n.p,{children:"The converted config; the same object as the input config."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(6540);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);