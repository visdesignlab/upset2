"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[4163],{4592:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"typedoc/@visdesignlab/upset2-react/interfaces/UpsetItem","title":"UpsetItem","description":"Developer Reference / @visdesignlab/upset2-react / UpsetItem","source":"@site/docs/typedoc/@visdesignlab/upset2-react/interfaces/UpsetItem.md","sourceDirName":"typedoc/@visdesignlab/upset2-react/interfaces","slug":"/typedoc/@visdesignlab/upset2-react/interfaces/UpsetItem","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-react/interfaces/UpsetItem","draft":false,"unlisted":false,"editUrl":"https://github.com/visdesignlab/upset2/edit/main/packages/userdocs/docs/typedoc/@visdesignlab/upset2-react/interfaces/UpsetItem.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SidebarProps","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-react/interfaces/SidebarProps"},"next":{"title":"UpsetProps","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-react/interfaces/UpsetProps"}}');var r=s(4848),c=s(8453);const a={},i="Interface: UpsetItem",d={},o=[{value:"Indexable",id:"indexable",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"/upset2/docs/typedoc/",children:"Developer Reference"})," / ",(0,r.jsx)(t.a,{href:"/upset2/docs/typedoc/@visdesignlab/upset2-react/",children:"@visdesignlab/upset2-react"})," / UpsetItem"]}),"\n",(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"interface-upsetitem",children:"Interface: UpsetItem"})}),"\n",(0,r.jsxs)(t.p,{children:["Defined in: ",(0,r.jsx)(t.a,{href:"https://github.com/visdesignlab/upset2/blob/7ba0bf13ebe4ee690a3ba0a68fa2cbc4e0d7d45d/packages/upset/src/types.ts#L91",children:"types.ts:91"})]}),"\n",(0,r.jsx)(t.p,{children:"Raw data object for an UpSet plot.\nThis is used to generate the processed data. Column annotations are inferred from the data types."}),"\n",(0,r.jsx)(t.h2,{id:"indexable",children:"Indexable"}),"\n",(0,r.jsxs)(t.p,{children:["[",(0,r.jsx)(t.code,{children:"key"}),": ",(0,r.jsx)(t.code,{children:"string"}),"]: ",(0,r.jsx)(t.code,{children:"string"})," | ",(0,r.jsx)(t.code,{children:"number"})," | ",(0,r.jsx)(t.code,{children:"boolean"})]})]})}function l(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>i});var n=s(6540);const r={},c=n.createContext(r);function a(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);