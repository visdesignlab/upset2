"use strict";(self.webpackChunkuserdocs=self.webpackChunkuserdocs||[]).push([[9049],{7109:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"typedoc/@visdesignlab/upset2-core/functions/isAltText","title":"isAltText","description":"Developer Reference / @visdesignlab/upset2-core / isAltText","source":"@site/docs/typedoc/@visdesignlab/upset2-core/functions/isAltText.md","sourceDirName":"typedoc/@visdesignlab/upset2-core/functions","slug":"/typedoc/@visdesignlab/upset2-core/functions/isAltText","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/isAltText","draft":false,"unlisted":false,"editUrl":"https://github.com/visdesignlab/upset2/edit/main/packages/userdocs/docs/typedoc/@visdesignlab/upset2-core/functions/isAltText.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"isAggregateBy","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/isAggregateBy"},"next":{"title":"isAttributePlots","permalink":"/upset2/docs/typedoc/@visdesignlab/upset2-core/functions/isAttributePlots"}}');var i=s(4848),c=s(8453);const r={},o="Function: isAltText()",l={},d=[{value:"Parameters",id:"parameters",level:2},{value:"val",id:"val",level:3},{value:"Returns",id:"returns",level:2}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"/upset2/docs/typedoc/",children:"Developer Reference"})," / ",(0,i.jsx)(t.a,{href:"/upset2/docs/typedoc/@visdesignlab/upset2-core/",children:"@visdesignlab/upset2-core"})," / isAltText"]}),"\n",(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"function-isalttext",children:"Function: isAltText()"})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"isAltText"}),"(",(0,i.jsx)(t.code,{children:"val"}),"): ",(0,i.jsx)(t.code,{children:"val is AltText"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Defined in: ",(0,i.jsx)(t.a,{href:"https://github.com/visdesignlab/upset2/blob/8bab9054a611ba4f42ec56474d235544a123c431/packages/core/src/typecheck.ts#L100",children:"typecheck.ts:100"})]}),"\n",(0,i.jsx)(t.p,{children:"Type guard for AltText"}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"val",children:"val"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"unknown"})}),"\n",(0,i.jsx)(t.p,{children:"The value to check"}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"val is AltText"})}),"\n",(0,i.jsx)(t.p,{children:"whether val is an AltText"})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(6540);const i={},c=n.createContext(i);function r(e){const t=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(c.Provider,{value:t},e.children)}}}]);